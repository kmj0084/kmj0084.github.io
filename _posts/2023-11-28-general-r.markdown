---
layout: posts
title:  "General R"
date:   2023-11-28
categories: work
tags: r
description: sabermetrics analysis with r
header:
 overlay_image: https://media.istockphoto.com/id/185232916/hu/fot%C3%B3/baseball-statisztik%C3%A1k.webp?b=1&s=170667a&w=0&k=20&c=ynbEOj89LJPn1bgWtB5rOrNzpkqp_HEBnx0vmPxDsB0=
 teaser: https://media.istockphoto.com/id/1098072736/hu/fot%C3%B3/baseball.webp?b=1&s=170667a&w=0&k=20&c=6uZtbEVSplj-t2r9kj0aIi2MDe0EWKPlp0AZz_VKd0c=
---

```{r Libraries}


library(readr)

# Data Visualization
library("ggplot2")

# Baseball Libraries: 
library("baseballr")
#Experimental Load for baseballr...has previously been problematic in updates
# install.packages("devtools")
# devtools::install_github("BillPetti/baseballr", ref = "development_branch")

# Data Manipulation:
library("tidyverse")
library("googlesheets4")
library("googledrive")
library("dplyr")
library("lubridate")
library("readxl")
library("writexl")

# Statistical Modelling: 
library("elo")

```

PRODUCTION WORKFLOW:

```{r Fangraphs csv files import}


fg_daily_batter_master_23 <- read_csv("C:/Users/Admin/Desktop/budaball_files/fg_daily_batter_master_23.csv", 
    col_types = cols(Date_key = col_date(format = "%B %d, %Y")))
View(fg_daily_batter_master_23)


fg_cumul_batter_master_23 <- read_csv("C:/Users/Admin/Desktop/budaball_files/fg_cumul_batter_master_23.csv", 
    col_types = cols(Date_key = col_date(format = "%B %d, %Y")))
View(fg_cumul_batter_master_23)
```

```{r Baseball Reference team results 2023}

astros_team_results <- bref_team_results("HOU", 2023)
rangers_team_results <- bref_team_results("TEX", 2023)
angels_team_results <- bref_team_results("LAA", 2023)
mariners_team_results <- bref_team_results("SEA", 2023)
athletics_team_results <- bref_team_results("OAK", 2023)
orieles_team_results <- bref_team_results("BAL", 2023)
rays_team_results <- bref_team_results("TBR", 2023)
jays_team_results <- bref_team_results("TOR", 2023)
redsox_team_results <- bref_team_results("BOS", 2023)
yankees_team_results <- bref_team_results("NYY", 2023)
twins_team_results <- bref_team_results("MIN", 2023)
guardians_team_results <- bref_team_results("CLE", 2023)
tigers_team_results <- bref_team_results("DET", 2023)
whitesox_team_results <- bref_team_results("CHW", 2023)
royals_team_results <- bref_team_results("KCR", 2023)
braves_team_results <- bref_team_results("ATL", 2023)
phillies_team_results <- bref_team_results("PHI", 2023)
marlins_team_results <- bref_team_results("MIA", 2023)
mets_team_results <- bref_team_results("NYM", 2023)
nationals_team_results <- bref_team_results("WSN", 2023)
brewers_team_results <- bref_team_results("MIL", 2023)
reds_team_results <- bref_team_results("CIN", 2023)
cubs_team_results <- bref_team_results("CHC", 2023)
cardinals_team_results <- bref_team_results("STL", 2023)
pirates_team_results <- bref_team_results("PIT", 2023)
dodgers_team_results <- bref_team_results("LAD", 2023)
diamondbacks_team_results <- bref_team_results("ARI", 2023)
giants_team_results <- bref_team_results("SFG", 2023)
padres_team_results <- bref_team_results("SDP", 2023)
rockies_team_results <- bref_team_results("COL", 2023)

all_team_results <- bind_rows(astros_team_results, rangers_team_results, angels_team_results, mariners_team_results, athletics_team_results, orieles_team_results, rays_team_results, jays_team_results, redsox_team_results, yankees_team_results, twins_team_results, guardians_team_results, tigers_team_results, whitesox_team_results, royals_team_results, braves_team_results, phillies_team_results, marlins_team_results, mets_team_results, nationals_team_results, brewers_team_results, reds_team_results, cubs_team_results, cardinals_team_results, pirates_team_results, dodgers_team_results, diamondbacks_team_results, giants_team_results, padres_team_results, rockies_team_results)

write.csv(all_team_results, file='/Users/Admin/Desktop/budaball_files/team_results.csv', row.names=FALSE)
```

## DEVELOPMENT:
```{r MLB pitch-by-pitch data}

single_day_pbp <- function(date) {
  game_pks <- mlb_game_pks (date, level_id = c ( 1 ) )
  games_pbp <- as.list(game_pks$game_pk)
  games_pbp <- lapply(games_pbp, mlb_pbp)
  return(Reduce(full_join, games_pbp))
}

# return(tryCatch(as.Date(date_in), error=function(e) NULL))
# create list for March 30 to yesterday for function input.
start_date <- ymd("2023-03-30")
end_date <- ymd("2023-07-30")
range <- as.list(as_date(seq(start_date, end_date, "days")))
View(range)
# Just use lapply again to go through list of dates and apply function? 
pbp_thru_July30 <- lapply(range, single_day_pbp1) 
pbp_thru_July30 <- Reduce(full_join, pbp_thru_July30)


# In use pbp log, day-by-day
pbp_March30 <- single_day_pbp("2023-03-30")
pbp_March31 <- single_day_pbp("2023-03-31")
...
# mlb_pbp troubleshoot:
#April5
pbp_April5 <- mlb_game_pks ("2023-04-05", level_id = c ( 1 ) )
pbp_April5 <- as.list(pbp_April5$game_pk)
#insert appropriate element to delete in list:
pbp_April5[13] <- NULL
pbp_April5 <- lapply(pbp_April5, mlb_pbp)
pbp_April5 <- Reduce(full_join, pbp_April5)

#April29
pbp_April29 <- mlb_game_pks ("2023-04-29", level_id = c ( 1 ) )
pbp_April29 <- as.list(pbp_April29$game_pk)
#insert appropriate element to delete in list:
pbp_April29[17] <- NULL
pbp_April29 <- lapply(pbp_April29, mlb_pbp)
pbp_April29 <- Reduce(full_join, pbp_April29)

#June21
pbp_June21 <- mlb_game_pks ("2023-06-21", level_id = c ( 1 ) )
pbp_June21 <- as.list(pbp_June21$game_pk)
#insert appropriate element to delete in list:
pbp_June21[15] <- NULL
pbp_June21 <- lapply(pbp_June21, mlb_pbp)
pbp_June21 <- Reduce(full_join, pbp_June21)

#August7
pbp_August07 <- mlb_game_pks ("2023-08-07", level_id = c ( 1 ) )
pbp_August07 <- as.list(pbp_August07$game_pk)
#pbp_August07 <- Filter(Negate(is.null), pbp_August07)
pbp_August07 <- lapply(pbp_August07, mlb_pbp)
pbp_August07 <- Reduce(full_join, pbp_August07)

# April5
mlb_pbp(game_pk = 718704)
mlb_pbp(game_pk = 718699)
mlb_pbp(game_pk = 718701)
mlb_pbp(game_pk = 718697)
mlb_pbp(game_pk = 718702)
mlb_pbp(game_pk = 718698)
mlb_pbp(game_pk = 718694)
mlb_pbp(game_pk = 718696)
mlb_pbp(game_pk = 718695)
mlb_pbp(game_pk = 718689)
mlb_pbp(game_pk = 718691)
mlb_pbp(game_pk = 718692)

mlb_pbp(game_pk = 718700)

# combine into new list and rerun as April 5

# April29
mlb_pbp(game_pk = 718381)
mlb_pbp(game_pk = 718401)
mlb_pbp(game_pk = 718383)
mlb_pbp(game_pk = 718399)
mlb_pbp(game_pk = 718378)
mlb_pbp(game_pk = 718379)
mlb_pbp(game_pk = 718375)
mlb_pbp(game_pk = 718377)
mlb_pbp(game_pk = 718385)
mlb_pbp(game_pk = 718372)
mlb_pbp(game_pk = 718384)
mlb_pbp(game_pk = 718374)
mlb_pbp(game_pk = 718373)
mlb_pbp(game_pk = 718376)
mlb_pbp(game_pk = 718366)
mlb_pbp(game_pk = 718369)

mlb_pbp(game_pk = 718371)

# June21
mlb_pbp(game_pk = 717677)
mlb_pbp(game_pk = 717676)
mlb_pbp(game_pk = 717669)
mlb_pbp(game_pk = 717671)
mlb_pbp(game_pk = 717668)
mlb_pbp(game_pk = 717670)
mlb_pbp(game_pk = 717672)
mlb_pbp(game_pk = 717673)
mlb_pbp(game_pk = 717666)
mlb_pbp(game_pk = 717663)
mlb_pbp(game_pk = 717665)
mlb_pbp(game_pk = 717667)
mlb_pbp(game_pk = 717662)
mlb_pbp(game_pk = 717674)

mlb_pbp(game_pk = 717664)





# bind all the dataframes together: 
total_pbp <- bind_rows(pbp_March30
               , pbp_March31
...
               )



```

```{r Update pbp list}

total_pbp_readin <- read_excel("C:/Users/Admin/Desktop/Budaball_Dash/pbp/total_pbp.xlsx")

total_pbp_amend <- bind_rows(total_pbp_readin
                             , pbp_August21
                             , pbp_August22
                             , pbp_August23
                             , pbp_August24
                             , pbp_August25
                             , pbp_August26
                             , pbp_August27
                             , pbp_August28
                             , pbp_August29
                             , pbp_August30
                             , pbp_August31
                             )

total_pbp <- total_pbp_amend

write_xlsx(total_pbp,"/Users/Admin/Desktop/Budaball_Dash/pbp/total_pbp.xlsx")



```

```{r Park Factors}


(park_factors_23 <- fg_park(2023) )



```

""

dplyr::bind_rows(df1, df2)

game_pks_1 \<- mlb_game_pks ( today ( ) -2 , level_ids = c ( 1 ) ) pbp_july29 \<- as.list(game_pks_1\$game_pk) pbp_july29 \<- lapply(pbp_july29, mlb_pbp) pbp_july29 \<- Reduce(full_join, pbp_july29) write_xlsx(pbp_july29,"/Users/Admin/Desktop/pbp/pbp_july29.xlsx")

##yesterday_pbp_dataframe \<- do.call(rbind.data.frame, yesterday_pbp)

```{r}


# Fangraphs batter data - Manual load process (sample rows below, plus date key)
Twenty22_batters <- as_tibble(fg_batter_leaders(2022, 2022, league = "all", qual = "n"))
Twenty22_batters <- Twenty22_batters %>% 
  mutate (date_proxy="April 8")
Twenty22_batters$date_proxy <- as.Date(Twenty22_batters$date_proxy, 
                                       format = "%B %d")
Twenty22_batters$date_proxy <- Twenty22_batters$date_proxy - 365

# Bref team results
# Astros
team_results_astros <- as_tibble(bref_team_results("HOU", 2022))
team_results_astros$Date_reformatted <- as.Date(team_results_astros$Date,
                                    format = "%A, %b %d")
team_results_astros$Date_reformatted <- team_results_astros$Date_reformatted - 365
team_results_astros$Date_fgFriendly <- as.Date(team_results_astros$Date_reformatted,
                                              format = "%B %d, %Y")
# Yankees
team_results_yankees <- as_tibble(bref_team_results("NYY", 2022))
team_results_yankees$Date_reformatted <- as.Date(team_results_yankees$Date,
                                    format = "%A, %b %d")
team_results_yankees$Date_fgFriendly <- as.Date(team_results_yankees$Date_reformatted,
                                              format = "%B %d, %Y")
team_results_yankees$Date_fgFriendly <- team_results_yankees$Date_fgFriendly - 365

# Combine teams
team_results_comb <- rbind(team_results_astros, team_results_yankees)

# Left join of Fangraphs batter tib with team results
Twenty22_batters_LJ_comb <- left_join(Twenty22_batters, team_results_comb, 
                                     by=c("Team"="Tm",
                                          "date_proxy"="Date_fgFriendly"))









(test_schedule <- mlb_schedule(season = 2023, level_ids = "1"))

-------
'These stats:' 
Summary_function <- function(main_sample, var_1, var_2  ) { 
  main_sample %>%
    summarise ( rows_count = n(), 
                week_min_var1_HR = min ({{ var_1 }}), 
                week_max_var1 = max ({{ var_1 }}),
                week_min_var2_AVG = min( {{ var_2 }}),
                week_max_var2 = max( {{ var_2 }}),
                 ) %>%
    print() 
}

'During this timeframe:' 
#Yesterday's games: 
Summary_player_last_week <- main_sample %>%
  filter(Date_key == max(Date_key)) %>%
  Summary_function_Last_week ( HR, AVG )

-------

```

```{r}

main_sample <- read_sheet("https://docs.google.com/spreadsheets/d/1rrREOr_GanFLhptsjNQxwYHyEVjrvmmV3UTrETb7lPk/edit#gid=1488376356",
                          sheet = "sheet_1"
                          )

# Adding week number:
main_sample$week_no <- strftime(main_sample$Date_key, format = "%V")

teams_grouped <- main_sample %>%
  group_by(Team) %>%
    summarise(avg_wOBA = mean(wOBA), 
              luck = mean(BABIP) - mean(AVG)
              )

top_war_performers <- main_sample %>% 
          filter(week_no == "16")%>%
          group_by(Name) %>%
          arrange(desc(WAR))


```

```{r Chadwicks Player Database}

chadwick <- chadwick_player_lu()

chadwick_1 <- select(as.tibble(chadwick), name_last, 
                                          name_first, 
                                          key_fangraphs, 
                                          key_bbref, 
                                          key_retro, 
                                          key_mlbam, 
                                          key_person, 
                                          key_uuid, 
                                          mlb_played_first, 
                                          mlb_played_last
                     )

chadwick_1 <- filter(chadwick_1, mlb_played_last == 2022)

Reference_player_Ids_tibble <- chadwick_1

# This was an attempt to merge the function call results directly with a roster. It's likely more prudent to have the Reference table.
#mapply(playerid_lookup, BudaRosters$Last_Name, BudaRosters$First_Name)
#BudaRoster$Player_Id <- mapply(playerid_lookup, BudaRosters$Last_Name, BudaRosters$First_Name)

```

```{r}


fg_batter_leaders = fg_batter_leaders(x = 2022, 
                                      y = 2022,
                                      league = "all",
                                      qual = "n",
                                      ind = 0)
View(fg_batter_leaders)


(bregman_game_logs <- fg_batter_game_logs(alex_bregman$fangraphs_id, year = 2022))


astros_daily_results <- bref_team_results("HOU", 2022)
astros_daily_results <- separate(astros_daily_results, Date, into = c("DofW", "DandM"), sep = "\\s", extra = "merge")
astros_daily_results$DandM <- paste0(astros_daily_results$DandM, ", 2022")
astros_current_roster <- fg_batter_leaders %>% 
                              filter(Team == "HOU")

fg_batter_leaders <- fg_batter_leaders %>% 
  group_by(Team) %>%
  slice_max(order_by = PA, n = 10)

fg_batter_leaders_ISO <- fg_batter_leaders %>%
  group_by(Team) %>%
  slice_max(order_by = PA, n = 10) %>%
  summarise(median_ISO = median(ISO),
            median_OPS = median(OPS),
            n = n()
            )


```

```{r}

batters <- fg_batter_leaders(2022, 
                  2022, 
                  league = "all", 
                  qual = "n"
                  )

batters_teamed <- group_by(batters, Team)


---- #Astros explore

astros_teamed <- group_by(batters, Team) %>%
                    filter(Team == "HOU")

summarize(astros_teamed, batters_count = n())


astros_plot_1 <- ggplot(astros_teamed, aes(K_pct, 
                                           HR, 
                                           label = astros_teamed$Name))
astros_plot_1 + geom_label(aes(fill = factor(Name)), colour = "white", fontface = "bold")

----
  

```

```{r Recent Range Game Logs}


# Take qualified batters from this year: 
current_fg_leaders_offense <- fg_batter_leaders(x = 2022, y = 2022, qual = 100)
current_fg_leaders_pids <- current_fg_leaders_offense$playerid
current_fg_leaders_names <- current_fg_leaders_offense$Name
# current_fg_leaders_pids <- as.numeric(unlist(current_fg_leaders_pids))

# Define recent game log functions: 
recent_bat_fggl_6 <- function(x){
  out_1 <- print((head(fg_batter_game_logs(x, year = 2022), 6) %>%
      select(1:40, 
             `K%`, `BB/K`, OBP, SLG, OPS,
             ISO, BABIP, `GB/FB`, `LD%`, wOBA,
             wRAA, wRC, `wRC+`, wBSR, WPA,
             RE24, Clutch)))
}

recent_bat_fggl_22 <- function(x){
  out_2 <- print((head(fg_batter_game_logs(x, year = 2022), 22) %>%
      select(1:40, 
             `K%`, `BB/K`, OBP, SLG, OPS,
             ISO, BABIP, `GB/FB`, `LD%`, wOBA,
             wRAA, wRC, `wRC+`, wBSR, WPA,
             RE24, Clutch)))
}

combined_offenses_seperate_6 <- lapply(current_fg_leaders_pids, recent_bat_fggl_6)
combined_offenses_seperate_22 <- lapply(current_fg_leaders_pids, recent_bat_fggl_22) 

View(combined_offenses_combined_6 <- do.call(rbind, combined_offenses_seperate_6))
View(combined_offenses_combined_22 <- do.call(rbind, combined_offenses_seperate_22))


```

```{r Data frame set up}

df_recent_6_bat <- combined_offenses_combined_6
df_recent_22_bat <- combined_offenses_combined_22

explore_22b <- df_recent_22_bat %>%
                  group_by(PlayerName) %>%
                  summarise(bat_order = mean(as.integer(BatOrder)),
                            age = mean(Age), 
                            games_official = sum(G),
                            total_ABs = sum(AB),
                            average_PAs = mean(PA),
                            hits = sum(H),
                            home_runs = sum(HR),
                            `walk%` = mean(`BB%`),
                            `K%` = mean(`K%`),
                            OBP = mean(OBP),
                            SLG = mean(SLG), 
                            OPS = mean(OPS), 
                            ISO = mean(ISO), 
                            BABIP = mean(BABIP),
                            `LD%` = mean(`LD%`),
                            wOBA = mean(wOBA), 
                            wRAA = mean(wRAA), 
                            wRC = mean(wRC), 
                            `wRC+` = mean(`wRC+`),
                            wBSR = mean(wBSR),
                            WPA = mean(WPA), 
                            RE24 = mean(RE24),
                            Clutch = mean(Clutch),
                            games = n())

explore_6b <- df_recent_6_bat %>%
                  group_by(PlayerName) %>%
                  summarise(bat_order = mean(as.integer(BatOrder)),
                            age = mean(Age), 
                            games_official = sum(G),
                            total_ABs = sum(AB),
                            average_PAs = mean(PA),
                            hits = sum(H),
                            home_runs = sum(HR),
                            `walk%` = mean(`BB%`),
                            `K%` = mean(`K%`),
                            OBP = mean(OBP),
                            SLG = mean(SLG), 
                            OPS = mean(OPS), 
                            ISO = mean(ISO), 
                            BABIP = mean(BABIP),
                            `LD%` = mean(`LD%`),
                            wOBA = mean(wOBA), 
                            wRAA = mean(wRAA), 
                            wRC = mean(wRC), 
                            `wRC+` = mean(`wRC+`),
                            wBSR = mean(wBSR),
                            WPA = mean(WPA), 
                            RE24 = mean(RE24),
                            Clutch = mean(Clutch),
                            games = n())

# Combined dfs: 
explore_22b_6b <- rbind(explore_22b, explore_6b)

```

```{r Leaders from FanGraphs}

current_fg_leaders_names
explore_22b_6b

find_spikes_SLG <- function(x){
  out <- print( explore_22b_6b %>% 
                  filter( PlayerName == x ) %>% 
                    ggplot( aes( x = x, y = wOBA ) ) +
                      geom_bar( stat = 'identity', fill = "forest green" ) + 
                      facet_wrap( ~ games_official) )
}

spike_slg_plots <- lapply(current_fg_leaders_names, find_spikes_SLG)
(spike_slg_plots)
spike_slg_plots_combined <- do.call(rbind, spike_slg_plots)
spike_slg_plots_combined

spikes_SLG <- sapply( current_fg_leaders_names, find_spikes_SLG )
View(spikes_SLG)


ggplot(explore_22b_6b, aes(x=PlayerName, y=wOBA))+
            geom_bar(stat='identity', fill="forest green")+ 
                  facet_wrap(~games_official)


```

```{r Google Sheets read}

# TODO: shift to read Sheet ID from URL
BudaRanks <- read_sheet("https://docs.google.com/spreadsheets/d/1axN_xQu0PMmfr9n9_M59B9pzlpgDtPcvtwxo8dbprnQ/edit#gid=635866381", 
                        sheet = "BudaRanks", 
                        range = "BudaRanks!A:B")

BudaRosters <- read_sheet("https://docs.google.com/spreadsheets/d/1cwWCzzGysVNCmajTcjeuV8qYlCOm37b0ROzOfkBNFgg/edit#gid=0",
                          sheet = "Teams40Roster",
                          range = "Teams40Roster!A:C")

df_BudaRosters = as_tibble(BudaRosters)

```

```{r Google Sheets data manipulation}

BudaRanks <- BudaRanks %>%
            add_row(Teams = "Diamondbacks", Ranking = 20)

```

```{r Google Sheets write}

write_sheet(BudaRanks, 
            ss="https://docs.google.com/spreadsheets/d/1axN_xQu0PMmfr9n9_M59B9pzlpgDtPcvtwxo8dbprnQ/edit#gid=635866381", 
            sheet = "BudaRanks")

```

```{r EXTRA: Player ID lookup}

alex_bregman = playerid_lookup(last_name = "Bregman", first_name = "Alex") 
yordan_alvarez = playerid_lookup(last_name = "Alvarez", first_name = "Yordan")
justin_verlander = playerid_lookup(last_name = "Verlander", first_name = "Justin") 
framber_valdez = playerid_lookup(last_name = "Valdez", first_name = "Framber") 

alex_bregman_id_fg = alex_bregman$fangraphs_id
yordan_alvarez_id_fg = yordan_alvarez$fangraphs_id
justin_verlander_id_fg = justin_verlander$fangraphs_id
framber_valdez_id_fg = framber_valdez$fangraphs_id

justin_verlander_pitch_log = fg_pitcher_game_logs(justin_verlander_id_fg, year = 2022)
framber_valdez_pitch_log = fg_pitcher_game_logs(framber_valdez_id_fg, year = 2022)
alex_bregman_game_log = fg_batter_game_logs(alex_bregman_id_fg, year = 2022)
yordan_alvarez_game_log = fg_batter_game_logs(yordan_alvarez_id_fg, year = 2022)

View(justin_verlander_pitch_log)
View(framber_valdez_pitch_log)
View(alex_bregman_game_log)
View(yordan_alvarez_game_log)

```

```{r EXTRA: Fangaphs - batting leaders}

fg_batter_leaders = fg_batter_leaders(x = 2022, 
                                      y = 2022,
                                      league = "all",
                                      qual = "n",
                                      ind = 0)
View(fg_batter_leaders)

fg_pitcher_leaders = fg_pitcher_leaders(x = 2022, 
                                      y = 2022,
                                      league = "all",
                                      qual = "n",
                                      ind = 0)
View(fg_pitcher_leaders)

# bar <- ggplot(data = diamonds) +
#   geom_bar(
#     mapping = aes(x = cut, fill = cut),
#     show.legend = FALSE,
#     width = 1
#   ) +
#   theme(aspect.ratio = 1) +
#   labs(x = NULL, y = NULL)
# 
# bar + coord_flip()
# bar + coord_polar()
```

Maybe track deviations from beginning of season to end of season with popular outlets, on a meta basis?
